[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fitness-coach-bot"
version = "1.0.0"
description = "A production-ready Telegram accountability bot for fitness tracking"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Fitness Coach Bot", email = "fitness-coach-bot@example.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Chat",
    "Topic :: Health & Fitness",
]
requires-python = ">=3.11"
dependencies = [
    "python-telegram-bot==20.3",
    "APScheduler==3.10.4",
    "anthropic==0.3.11",
    "google-api-python-client==2.104.0",
    "google-auth-oauthlib==1.1.0",
    "google-auth==2.23.3",
    "pytz==2023.3",
    "requests==2.31.0",
    "urllib3==2.0.4",
]

[project.optional-dependencies]
dev = [
    "mypy==1.5.1",
    "types-pytz==2023.3.1.1",
    "types-requests==2.31.0.6",
    "pytest==7.4.2",
    "pytest-asyncio==0.21.1",
    "pytest-mock==3.11.1",
    "pytest-cov>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/your-username/fitness-coach-bot"
Repository = "https://github.com/your-username/fitness-coach-bot.git"
Issues = "https://github.com/your-username/fitness-coach-bot/issues"

[project.scripts]
fitness-coach-bot = "bot:main"

[tool.setuptools]
packages = ["fitness_coach_bot"]
package-dir = {"fitness_coach_bot" = "."}

[tool.setuptools.package-data]
fitness_coach_bot = ["*.md", "*.txt", "*.toml"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    ".venv/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 